{"version":3,"sources":["components/Jumbotron/index.js","components/List/index.js","utils/API.js","components/Grid/index.js","components/Book/index.js","components/Form/index.js","pages/Search.js","pages/Saved.js","pages/NoMatch.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","width","className","List","ListItem","_ref2","API","getBooks","q","axios","get","params","getSavedBooks","deleteBook","id","delete","saveBook","bookData","post","Container","fluid","concat","Row","Col","_ref3","Book","title","authors","link","description","image","Button","size","target","rel","href","src","alt","Form","handleInputChange","handleFormSubmit","type","value","placeholder","name","onChange","required","onClick","Search","state","books","message","event","_event$target","_this","setState","Object","defineProperty","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","_this2","this","components_Jumbotron","components_Form","length","List_List","map","components_Book","key","join","Component","Saved","err","console","log","handleBookDelete","_id","NoMatch","role","aria-label","Navbar","App","react_router_dom","components_Navbar","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.101f64e7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\", width: \"100%\"}}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}","import axios from \"axios\";\n\nexport default {\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the saved book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves an book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ children }) {\n  return (\n    <div\n    style={{ textAlign: \"center\"}}\n      className=\"col\"\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Book({ title, authors, link, description, image, Button }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        <Col size=\"md-8\">\n          <h3 className=\"font-italic\">{title}</h3>\n        </Col>\n        <Col size=\"md-4\">\n          <div className=\"btn-container\">\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n              View\n            </a>\n            <Button />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-6\">\n          <p className=\"font-italic small\">Written by {authors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"12 sm-4 md-2\">\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\n        </Col>\n        <Col size=\"12 sm-8 md-10\">\n          <p>{description}</p>\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;","import React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          id=\"search\"\n          type=\"text\"\n          value={q}\n          placeholder=\"Search a Book\"\n          name=\"q\"\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button\n          onClick={handleFormSubmit}\n          type=\"submit\"\n          className=\"btn btn-lg btn-danger float-right\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\nexport default Form;\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { List } from \"../components/List\";import API from \"../utils/API\";\nimport Book from \"../components/Book\";\nimport { Row, Container, Col } from \"../components/Grid\";\nimport Form from \"../components/Form\";\n\nclass Search extends Component {\n  state = {\n    books: [],\n    q: \"\",\n    message: \"Search For A Book To Begin!\"\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(() =>\n        this.setState({\n          books: [],\n          message: \"No Books Found, Try a Different Query\"\n        })\n      );\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  handleBookSave = id => {\n    const book = this.state.books.find(book => book.id === id);\n\n    API.saveBook({\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n            <Jumbotron>\n            <h1>Google Books Search (React)</h1>\n            <h4>Search for and save books of Interest!</h4>\n            </Jumbotron>\n          <Col>     \n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n          </Col>\n        </Row>\n        <Row>\n        <Col>\n        {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book.id}\n                      title={book.volumeInfo.title}\n                      link={book.volumeInfo.infoLink}\n                      authors={book.volumeInfo.authors.join(\", \")}\n                      description={book.volumeInfo.description}\n                      image={book.volumeInfo.imageLinks.thumbnail}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookSave(book.id)}\n                          className=\"btn btn-primary ml-2\"\n                        >\n                          Save\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h3 className=\"text-center\">{this.state.message}</h3>\n              )}\n        </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport Book from \"../components/Book\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\nclass Saved extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then(res =>\n        this.setState({\n          books: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleBookDelete = id => {\n    API.deleteBook(id).then(res => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n            <Jumbotron>\n              <h1>Google Books Search (React)</h1>\n              <h4>Search for and save books of Interest!</h4>\n            </Jumbotron>\n        <Col>\n        {this.state.books.length ? (\n                <List>\n                  {this.state.books.map(book => (\n                    <Book\n                      key={book._id}\n                      title={book.title}\n                      link={book.link}\n                      authors={book.authors.join(\", \")}\n                      description={book.description}\n                      image={book.image}\n                      Button={() => (\n                        <button\n                          onClick={() => this.handleBookDelete(book._id)}\n                          className=\"btn btn-danger ml-2\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                    />\n                  ))}\n                </List>\n              ) : (\n                <h3 className=\"text-center\">No Saved Books</h3>\n              )}\n          </Col>  \n        </Row>\n      </Container>\n    )}\n};\n\nexport default Saved;\n","import React from \"react\";\nimport { Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <a className=\"navbar-brand\" href=\"/search\">\n        Search\n      </a>\n      <a className=\"navbar-brand\" href=\"/saved\">\n        Saved\n      </a>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}